## Assignment Part-1
Q1. Why do we call Python as a general purpose and high-level programming language?
Answer- Python is a general-purpose language, meaning it can be used to create a variety of different programs and isn't specialized for any specific problems.
Q2. Why is Python called a dynamically typed language?
Answer- Python don't have any problem even if we don't declare the type of variable. It states the kind of variable in the runtime of the program. So, Python is a dynamically typed language.
Q3. List some pros and cons of Python programming language?
Answer- Python advantages are its portability, versatility, large user base, and free & open source license. Some of the disadvantages of Python include its slow speed and heavy memory usage.
Q4. In what all domains can we use Python?
Answer- Python is the go-to programming language for domains such as artificial intelligence, machine learning and deep learning, 
Q5. What are variable and how can we declare them?
Answer- A variable declaration always contains two components: the type of the variable and its name.
Q6. How can we take an input from the user in Python?
Answer- we use the input() function to ask the user for input. As a parameter, we input the text we want to display to the user. Once the user presses “enter,” the input value is returned.
Q7. What is the default datatype of the value that has been taken as an input using input() function?
Answer- Parameter: Prompt: (optional) The string to write to standard output (typically the screen) without a newline. By default, it returns a string object. Hence, the input() function by default returns the value as string data type​.
Q8. What is type casting?
Answer- The conversion of one data type into the other data type is known as type casting in python or type conversion in python. 
Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?
Answer- Using the split() Method To give multiple input in Python, the split() function in Python helps to split the multiple input fed by the user into single individual values for each variable. The method takes two parameters as part of its syntax that is, the separator and the maxsplit.
Q10. What are keywords?
Answer- Python keywords are special reserved words that have specific meanings and purposes and can't be used for anything but those specific purposes.
Q11. Can we use keywords as a variable? Support your answer with reason.
Answer- Keywords define the language's syntax rules and structure, and they cannot be used as variable names.They are used to define the syntax and structure of the Python language. All the keywords except True , False and None are in lowercase and they must be written as they are. 
Q12. What is indentation? What's the use of indentaion in Python?
Answer- Indentation refers to the spaces at the beginning of a code line. Where in other programming languages the indentation in code is for readability only, the indentation in Python is very important. Python uses indentation to indicate a block of cod
Q13. How can we throw some output in Python?
Answer - A program will also usually need to present data back to the user. You can display program data to the console in Python with print() .
Q14. What are operators in Python?
Answer- In Python, operators are special symbols that designate that some sort of computation should be performed. The values that an operator acts on are called operands.
Q15. What is difference between / and // operators?
Anwser- / is used for float division and // is used of floor (integer) division.
Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```
Answer- "iNeuron"*3
Q17. Write a code to take a number as an input from the user and check if the number is odd or even.
Answer - 
num = float(input("Enter a number: "))
if num%2 == 0:
  print(f"{num} is even")
else:
  print(f"{num} is odd")

Q18. What are boolean operator?
Answer- True , False , not , and , or are the only built-in Python Boolean operators.
Q19. What will the output of the following?
```
1 or 0

0 and 0

True and False and True

1 or 0 or 0
```
Answer- 
1 or 0 -> 1
0 and 0 -> 0
True and False and True -> False
1 or 0 or 0 -> 1

Q20. What are conditional statements in Python?
Answer- In large projects we have to control the flow of execution of our program and we want to execute some set of statements only if the given condition is satisfied, and a different set of statements when it’s not satisfied.

Q21. What is use of 'if', 'elif' and 'else' keywords?
Answer- if is the first condition check for the condition.
if "if" is False then elif's condition is checked.

else is checked when all the upper condition fails.

Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".
Answer -
age = int(input("Enter you age: "))
if age >= 18:
    print("I can vote")
else:
    print("I can't vote") 

Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
Answer- numbers = [12, 75, 150, 180, 145, 525, 50]
add = 0
for num in numbers:
  if num%2 == 0:
    add = add+num
  else:
    continue
print(add) 

Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.
Answer- 
x, y, z = input("Enter 3 numbers seprated by comma: ").split(",")
if int(x) > int(y) and int(x) > int(z):
  print(f"{x} is greatest")
elif int(y) > int(z):
  print(f"{y} is greatest")
else:
  print(f"{z} is greatest")

Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]

Answer- numbers = [12, 75, 150, 180, 145, 525, 50]
lst = []
for num in numbers:
  if num > 150:
    if num > 500:
      break
  elif num%5==0:
    lst.append(num) 

print(lst)
```